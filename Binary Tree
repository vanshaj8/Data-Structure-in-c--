#include<iostream>
#include<queue>
using namespace std;

struct btnode
{
	int data;
	btnode* left;
	btnode* right;
};

btnode* create(int value)
{
	btnode* newnode= new btnode();
	newnode->data=value;
	newnode->left=NULL;
	newnode->right=NULL;
	
	return newnode;
}

void prerder(btnode* root)
{
	if(root==NULL)
	{
		return ;
	}	
	cout<<root->data<<' ';
	prerder(root->left);
	prerder(root->right);
}

void inorder(btnode* root)
{
	if(root==NULL)
	{
		return;
	}
	inorder(root->left);
	cout<<root->data<<" ";
	inorder(root->right);
}

void postorder(btnode* root)
{
	if(root==NULL)
	{
		return;
	}
	postorder(root->left);
	postorder(root->right);
	cout<<root->data<<" ";
}

void levelorder(btnode* root)
{
	if(root==NULL)
	{
		return  ;
	}
	else
	{
		queue<btnode*>q;
		q.push(root);
		while(!q.empty())
		{
			btnode* current=q.front();
			q.pop();
			cout<<current->data<<" ";
			if(current->left!=NULL) q.push(current->left);
			if(current->right!=NULL) q.push(current->right);
		}
	}
}
int main()
{
	
	btnode* root=create(1);
	root->left=create(2);
	root->right=create(3);
	root->left->left=create(4);
	root->left->right=create(5);
	root->right->left=create(6);
	root->right->right=create(7);
	inorder(root);
	cout<<"\n";
	prerder(root);
	cout<<"\n";
	postorder(root);
	cout<<"\n";
	levelorder(root);
	return 0;
}
