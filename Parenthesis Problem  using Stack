#include<iostream>
#include<string.h>
#include<stack>
using namespace std;

bool arepair(char open,char close)
{
	if(open=='{'&&close=='}')
	{
		return true;
	}
		if(open=='['&&close==']')
	{
		return true;
	}
		if(open=='('&&close==')')
	{
		return true;
	}
	return false;
}
bool areparenthesisbalance(string str)
{
	stack<char>s;
	for(int i=0;i<str.length();i++)
	{
		if((str[i]=='{')||(str[i]=='[')||(str[i]=='('))
		{
			s.push(str[i]);
		}
		else if((str[i]=='}')||(str[i]==']')||(str[i]==')'))
		{
			if(s.empty()||!arepair(s.top(),str[i]))
			{
				return false;
			}
			else
			{
				s.pop();
			}
		}
	}
	
	return s.empty() ? true:false;
}
int main()
{
	int n;
	string str;
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>str;
		if(areparenthesisbalance(str))
		{
			cout<<"YES";
		}
		else
		{
			cout<<"NO";
		}
	}
}
